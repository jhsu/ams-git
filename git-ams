#!/usr/bin/env ruby

require 'optparse'

HELP=<<-HELP

    git ams set $branch_name # set the name of the development branch
    git ams                  # checks out development branch and pulls any updates

HELP

ENVS = [:development, :production]

def parse_args(args)
	if args
		case args.first
		when /dev/
			development_branch
		when /pro/
			production_branch
		when /feature/
			if args.length > 1
				development_branch
				checkout(args[1], "-b")
			else
				puts `git branch`
			end
		end
	end
end

def checkout(branch, opts="")
	if branch && branch != ""
		`git checkout#{" " + opts} #{branch}`
	else
		puts "Branch not set"
	end
end

def pull(branch)
	checkout branch
	`git pull`
end

def development_branch
  checkout `git config --get workflow.development`
end

def production_branch
  checkout `git config --get workflow.production`
end

def branch_name(env)
  `git config --get workflow.#{env}`
end

options = OptionParser.new do |opts|
	opts.on("-h", "Get Help") do |opt|
		puts HELP
	end

	ENVS.each do |env|
		opts.on("--#{env} branch", "set branch for #{env} work") do |branch|
			`git config workflow.#{env} #{branch}`
			puts "set #{env} branch to #{branch}"
		end
	end

	opts.on("-ls", "--list", "show working branches") do |list|
		listing = []
		ENVS.each do |env|
			listing << "#{env} : " + `git config --get workflow.#{env}`
		end
		puts "\nEnvironments\n============"
		puts listing
		puts ""
	end
end 
begin
	options.parse!(ARGV)
	parse_args(ARGV)
rescue
  puts HELP
end
